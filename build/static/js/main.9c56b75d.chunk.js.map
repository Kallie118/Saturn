{"version":3,"sources":["config/firebase.js","pages/register.js","pages/home.js","pages/dashboard.js","components/externalprofile.js","pages/profile.js","pages/myforums.js","pages/404.js","pages/navbar.js","pages/footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","analytics","Register","storage","props","handleRegister","state","password","cpassword","setState","error","username","length","match","proceed","auth","createUserWithEmailAndPassword","email","catch","then","signInWithEmailAndPassword","collection","doc","set","new_user","forums","profile_picture","bio","custom_name","docRef","onAuthStateChanged","user","updateProfile","photoURL","displayName","alert","console","message","log","code","handleEmail","event","target","value","handlePassword","handleCPassword","handleUsername","loggedIn","this","className","redAlert","htmlFor","type","onChange","placeholder","id","onClick","to","pathname","from","React","Component","Home","handleLogin","res","e","class","for","href","Dashboard","componentDidMount","location","reload","currentUser","updateUserData","loading","get","data","popularData","docs","exists","userData","hidePopup","update","window","POPULAR_DATA","map","index","key","src","height","alt","NEW_USER_POPUP","ExternalProfile","storageRef","ref","_","child","getDownloadURL","url","profilePic","redirect","Profile","handleEdit","disabled","handlePublish","emailIsValid","confirm","handleConfirm","updateEmail","profileChange","uuidv4","put","selectedFile","snapshot","metadata","name","popupError","handleBio","handleProfilePicture","files","test","replace","c","r","Math","random","toString","params","externalProfile","popupAlert","CONFIRM_PASSWORD_POPUP","rows","accept","aria-describedby","MyForums","NotFound","Navbar","handleLogout","signOut","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","x-placement","path","component","Footer","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c56b75d.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n    firebase.initializeApp({\n      apiKey: \"AIzaSyAvHWpzDxlXLWVjmtfNM-ebnVyKUYW-h5U\",\n      authDomain: \"saturn-d573e.firebaseapp.com\",\n      databaseURL: \"https://saturn-d573e.firebaseio.com\",\n      projectId: \"saturn-d573e\",\n      storageBucket: \"saturn-d573e.appspot.com\",\n      messagingSenderId: \"281989502039\",\n      appId: \"1:281989502039:web:9dde5db355c02fd14aff12\",\n      measurementId: \"G-W8S9N3VRV1\"\n    });\n\n    const db = firebase.firestore();\n\n    \n\n    firebase.analytics();\n\n   \n    export default db;","import React from 'react';\nimport firebase from 'firebase';\nimport { Redirect } from 'react-router-dom'\nimport db from '../config/firebase';\nconst storage = firebase.storage();\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: '',\n            email: '',\n            password: '',\n            cpassword: '',\n            username: '',\n            proceed: null,\n            loggedIn: null,\n        }\n    }\n\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ loggedIn: true })\n            } else {\n                this.setState({ loggedIn: false })\n            }\n        })\n    }\n\n\n    handleRegister = () => {\n\n\n        if (this.state.password !== this.state.cpassword) {\n            this.setState({ error: 'Your passwords did not match.' });\n        } else if (this.state.username.length > 15) {\n            this.setState({ error: 'Your username can not be longer then 15 characters.' });\n        } else if (this.state.username.match(\"^[A-Za-z0-9]+$\") === null) {\n            this.setState({ error: 'Your username can only contain letters and numbers.' });\n        } else {\n            this.setState({ proceed: false });\n            firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).catch((error) => {\n            })\n                .then(() => {\n                    firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).catch((error) => {\n                    })\n                })\n                .then(() => {\n                    //Update user info in database\n                    db.collection(\"users\").doc(this.state.username).set({\n                        new_user: true,\n                        email: this.state.email,\n                        forums: 0,\n                        profile_picture: 'default-profile.png',\n                        bio: 'This is a default bio.',\n                        custom_name: this.state.username\n                        \n                    })\n                        .then((docRef) => {\n                            //Assuming it was written to database we will begin to start.\n                            firebase.auth().onAuthStateChanged((user) => {\n                                if (user) {\n                                    user.updateProfile({\n                                        photoURL: \"images/default-profile.png\",\n                                        displayName: this.state.username\n                                    })\n                                    .then(() => {\n                                        this.setState({ proceed: true })\n                                    })\n                                    .catch((error) => {\n                                        this.setState({ error: error })\n                                    });\n                                }\n                                });\n                        })\n                        .catch(function (error) {\n                            alert('An error has occured. Please try again later.');\n                            console.error(\"Error adding document: \", error);\n                        });\n\n                })\n                .catch((error) => {\n                    this.setState({ error: error.message });\n                    console.log(error.code, error.message);\n                });\n        }\n\n\n    }\n\n    redAlert() {\n        if (this.state.error !== '') {\n            return (\n                <div className=\"alert alert-dismissible alert-danger\">\n                    <strong>Oh snap!</strong> {this.state.error}\n                </div>\n            )\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n    handleEmail = (event) => {\n        this.setState({ email: event.target.value })\n    }\n\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value })\n    }\n\n    handleCPassword = (event) => {\n        this.setState({ cpassword: event.target.value })\n    }\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value })\n    }\n\n\n    render() {\n        if (this.state.loggedIn === false) {\n            return (\n                <div>\n\n                    <div className=\"col-sm\">\n                        <br />  <br />\n                        <div className=\"container\">\n                            <div className=\"jumbotron\">\n                                <h1>Make a new account. </h1>\n\n                                {this.redAlert()}\n                                <label className=\"col-form-label\" htmlFor=\"username\">Username</label>\n                                <input type=\"text\" onChange={this.handleUsername} className=\"form-control\" value={this.state.username} placeholder=\"CoolGuy25\" id=\"username\" />\n                                <label className=\"col-form-label\" htmlFor=\"email\">Email</label>\n                                <input type=\"text\" onChange={this.handleEmail} className=\"form-control\" placeholder=\"JohnDoe@gmail.com\" id=\"email\" />\n                                <label className=\"col-form-label\" htmlFor=\"pass\">Password</label>\n                                <input type=\"password\" onChange={this.handlePassword} className=\"form-control\" placeholder=\"Password\" id=\"pass\" />\n                                <label className=\"col-form-label\" htmlFor=\"cpass\">Confirm Password</label>\n                                <input type=\"password\" onChange={this.handleCPassword} className=\"form-control\" placeholder=\"Confirm Password\" id=\"cpass\" /> <br />\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={() => { this.handleRegister() }}>Next</button> <br />\n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            )\n        } else if (this.state.loggedIn === true && this.state.proceed === true) {\n            return <Redirect to={{\n                pathname: '/dashboard',\n                state: { from: 'register' }\n            }} />\n        } else if (this.state.loggedIn === true && this.state.proceed === null) {\n            return <Redirect to='/dashboard' />\n        \n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport default Register;","import React from 'react';\nimport firebase from 'firebase';\nimport { Redirect } from 'react-router-dom'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            error: '',\n            loggedIn: null,\n        }\n    }\n\n    handleLogin = () => {\n        console.log('handling login')\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).catch((error) => {\n            this.setState({ error: error.message });\n            console.log(error.code, error.message);\n        })\n            .then((res) => {\n                firebase.auth().onAuthStateChanged((user) => {\n                    if (user) {\n                        this.setState({ loggedIn: true })\n                    } else {\n                        this.setState({ loggedIn: false })\n                    }\n                });\n            });\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ loggedIn: true })\n            } else {\n                this.setState({ loggedIn: false })\n            }\n        });\n    }\n\n\n    handleEmail = (e) => {\n        this.setState({ email: e.target.value })\n    }\n\n    handlePassword = (e) => {\n        this.setState({ password: e.target.value })\n    }\n\n\n    redAlert() {\n        if (this.state.error !== '') {\n            return (\n                <div className=\"alert alert-dismissible alert-danger\">\n                    <strong>Oh snap!</strong> {this.state.error}\n                </div>\n            )\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n    render() {\n        if (this.state.loggedIn === true) {\n            return (\n                <Redirect to='/dashboard' />\n            )\n        } else if (this.state.loggedIn === false) {\n            return (\n                <div>\n                    \n\n                    <div className=\"row login\">\n                        <div className=\"col-md-7 login-splash\">\n\n                        </div>\n                        <div className=\"col-md-4 login-holder\">\n                            <div class=\"card card-center text-white border-primary\" >\n                                <div class=\"card-header text-center\">Login</div>\n                                <div class=\"card-body\">\n                                    <div class=\"form-group\">\n                                        {this.redAlert()}\n                                        <label class=\"col-form-label\" for=\"inputDefault\">Email</label>\n                                        <input type=\"text\" onChange={this.handleEmail} class=\"form-control\" placeholder=\"Email\" id=\"inputDefault\" />\n                                        <label class=\"col-form-label\" for=\"inputDefault\">Password</label>\n                                        <input type=\"password\" onChange={this.handlePassword} class=\"form-control\" placeholder=\"Password\" id=\"inputDefault\" /> <br />\n                                        <button type=\"button\" class=\"btn btn-primary\" onClick={() => { this.handleLogin() }}>Login</button> &nbsp;\n                               </div>\n                                </div>\n                            </div>\n                            <div className=\"text-center\">\n                                <small>Don't have an account? <a href=\"/register\"><b>Register</b></a></small>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h1>There was an error</h1>\n                </div>\n            )\n        }\n\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport firebase from 'firebase';\nimport { Redirect } from 'react-router-dom'\nimport db from '../config/firebase';\n\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: null,\n            loading: true,\n            popularData: [],\n            user: {},\n            userData: {},\n            reload: false,\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.props.location.state && this.props.location.state.from === 'register') {\n            this.setState({ reload: true })\n\n        } else {\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    this.setState({ loggedIn: true });\n                    this.setState({ user: firebase.auth().currentUser });\n\n                    this.updateUserData();\n\n                } else {\n                    this.setState({ loggedIn: false });\n                    this.setState({ loading: false })\n                }\n            });\n\n            //get popular data\n            db.collection('popular').get().then(data => {\n                this.setState({ popularData: data.docs });\n            });\n        }\n    }\n\n    updateUserData = () => {\n        db.collection('users').doc(this.state.user.displayName).get().then(doc => {\n            if (doc.exists) {\n                this.setState({ userData: doc.data() });\n                this.setState({ loading: false })\n            } else {\n                alert('Error getting user data please reload.')\n            }\n        });\n    }\n\n    hidePopup = () => {\n        db.collection(\"users\").doc(this.state.user.displayName).update({\n            new_user: false\n        }).then(() => {\n            this.updateUserData();\n        })\n        .catch((error) => {\n            alert(error)\n        });\n    }\n\n\n\n    render() {\n        if (this.state.reload) {\n            window.location.reload();\n            return (\n                <Redirect to='/' />\n            )\n\n        }\n\n        const POPULAR_DATA = this.state.popularData.map((data, index) => {\n            return (\n                <a key={index} className=\"list-group-item list-group-item-action\">\n                    {data.id}\n                </a>\n            )\n        })\n\n        const NEW_USER_POPUP = () => {\n\n            if (this.state.userData.new_user) {\n                return (<div className=\"popup-holder\">\n                    <div className=\"jumbotron dashboard-newuser-popup text-center\">\n                        <h3>Welcome to Saturn!</h3>\n                      \n                        <hr />\n                        <div className=\"row\">\n                            <div className=\"col dashboard-newuser-popup-selection\">\n                                <img src=\"images/create-forum.png\" height=\"100px\" alt=\"Create Forum\" />\n                                <h5>Create a forum!</h5>\n                                <hr />\n\n                                <p>&nbsp; Create and lead your own custom forum! Invite your friends and grow your own community. </p>\n                            </div>\n\n                            <div className=\"col dashboard-newuser-popup-selection\">\n                            <img src=\"images/join-forum.png\" height=\"100px\" alt=\"Join Forum\" />\n                                <h5>Find a forum!</h5>\n                                <hr />\n\n                                <p>Explore all the forums Saturn has to offer. Check out the forums we have recommended for you!</p>\n                            </div>\n                        </div>\n\n                        <button onClick={ this.hidePopup }>Don't show me this.</button>\n\n                    </div>\n                </div>\n                )\n            }\n        }\n\n        if (this.state.loading === true) {\n            return null\n        } else if (this.state.loggedIn === true) {\n            return (\n                <div>\n                    {NEW_USER_POPUP()}\n\n\n                    <div className=\"row\">\n                        <div className=\"col dashboard-mainboard\">\n\n\n                            <div className=\"jumbotron div-center\">\n                                test <br /> <br /> <br /> test\n                           </div>\n                            <div className=\"jumbotron div-center\">\n                                test <br /> <br /> <br /> test\n                           </div>\n                            <div className=\"jumbotron div-center\">\n                                test <br /> <br /> <br /> test\n                           </div>\n                            <div className=\"jumbotron div-center\">\n                                test <br /> <br /> <br /> test\n                           </div>\n                            <div className=\"jumbotron div-center\">\n                                test <br /> <br /> <br /> test\n                           </div>\n                        </div>\n\n\n                        <div className=\"col-3 dashboard-right-sidebar-spacer\">\n\n                        </div>\n                        <div className=\"col-sm dashboard-right-sidebar\">\n                            <div className=\"list-group mobile-card div-center\">\n                                <a className=\"list-group-item list-group-item-action text-center disabled\">\n                                    <b>Popular Forums:</b>\n                                </a>\n                                {POPULAR_DATA}\n                            </div>\n                            <br />\n                            <div className=\"list-group mobile-card div-center\">\n                                <a className=\"list-group-item list-group-item-action text-center disabled\">\n                                    <b>Forums you follow:</b>\n                                </a>\n                                <a className=\"list-group-item list-group-item-action\">\n                                    Money Insider\n                                </a>\n                                <a className=\"list-group-item list-group-item-action\">\n                                    Fake news\n                                </a>\n                                <a className=\"list-group-item list-group-item-action\">\n                                    Home Imporovement\n                                </a>\n                                <a className=\"list-group-item list-group-item-action\">\n                                    Memes\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            )\n        } else if (this.state.loggedIn === false) {\n            return <Redirect to='/' />\n\n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport default Dashboard;","import React from 'react';\nimport firebase from 'firebase';\nimport { Redirect } from 'react-router-dom'\nimport db from '../config/firebase';\n\nclass ExternalProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userData: {},\n            profilePic: '',\n            loading: true,\n            redirect: false,\n        }\n    }\n\n    componentDidMount = () => {\n        let storageRef = firebase.storage().ref();\n\n        db.collection('users').doc(this.props.data).get().then(doc => {\n            this.setState({ userData: doc.data() });\n        })\n        .then(_ =>{\n            storageRef.child('profile-pic/' + this.state.userData.profile_picture).getDownloadURL().then((url) => {\n                this.setState({ profilePic: url})\n            });\n        })\n        .then(_ => {\n            this.setState({ loading: false })\n        })\n        .catch(_ => {\n            this.setState({ redirect: true })\n        })\n    }\n\n\n    render() {\n        if (this.state.redirect === true) {\n            return <Redirect to='/404' />\n        } else if (this.state.loading === false) {\n            return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row profile-padding\">\n                        <div className=\"col-2 text-center profile-picture-holder\">\n                            <img src={this.state.profilePic} className=\"profile-profile-picture\" alt=\"Profile Pic\" />\n                            <p>{this.state.userData.custom_name}</p>\n    \n                        </div>\n                        <div className=\"col\">\n                            <div className=\"jumbotron profile-holder\">\n                                <h3>{this.state.userData.custom_name}</h3>\n                                \n                                <hr />\n    \n                                <p>{this.state.userData.bio}</p>\n    \n                                <hr />\n    \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            )\n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport default ExternalProfile;","import React from 'react';\nimport firebase from 'firebase';\nimport { Redirect } from 'react-router-dom'\nimport db from '../config/firebase';\nimport ExternalProfile from '../components/externalprofile'\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: null,\n            loading: true,\n            profilePic: null,\n            disabled: true,\n            error: '',\n            popupError: '',\n            user: {},\n            userData: {},\n            username: '',\n            email: '',\n            bio: '',\n            profileChange: false,\n            password: '',\n            selectedFile: null,\n            confirm: false,\n\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ loggedIn: true });\n                this.setState({ user: firebase.auth().currentUser });\n\n                this.updateUserData();\n                this.setState({ username: this.state.user.displayName })\n\n            } else {\n                this.setState({ loggedIn: false });\n                this.setState({ loading: false })\n            }\n        });\n    }\n\n\n\n    updateUserData = () => {\n        db.collection('users').doc(this.state.user.displayName).get().then(doc => {\n            this.setState({ userData: doc.data() });\n            this.setState({ bio: this.state.userData.bio })\n            this.setState({ email: this.state.userData.email })\n        })\n            .then(_ => {\n                let storageRef = firebase.storage().ref();\n                storageRef.child('profile-pic/' + this.state.userData.profile_picture).getDownloadURL().then((url) => {\n                    this.setState({ profilePic: url })\n                }).catch((error) => {\n                    alert(error.message);\n                });\n            }).then(_ => {\n                this.setState({ loading: false })\n            })\n            .catch(error => {\n                alert(error.message);\n            })\n    }\n\n    handleEdit = () => {\n        this.setState({ disabled: !this.state.disabled })\n    }\n\n    emailIsValid(email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    uuidv4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n\n    handlePublish = () => {\n        if (this.state.username.length <= 1) {\n            this.setState({ error: 'Your username must be atleast 2 characters..' });\n        } else if (this.state.username.length > 15) {\n            this.setState({ error: 'Your username can not be longer then 15 characters.' });\n        } else if (!this.emailIsValid(this.state.email)) {\n            this.setState({ error: 'You must enter a valid email' });\n        } else if (this.state.username.match(\"^[A-Za-z0-9]+$\") === null) {\n            this.setState({ error: 'Your username can only contain letters and numbers.' });\n        } else {\n            this.setState({ confirm: true })\n        }\n    }\n\n    handleConfirm = () => {\n        firebase.auth().signInWithEmailAndPassword(this.state.user.email, this.state.password)\n            .then(() => {\n                db.collection(\"users\").doc(this.state.username).update({\n                    email: this.state.email,\n                    bio: this.state.bio,\n                    custom_name: this.state.username,\n                })\n                    .then(() => {\n                        firebase.auth().currentUser.updateEmail(this.state.email).then(() => {\n                            console.log('email updated')\n                        }).catch((error) => {\n                            console.log(error)\n                        });\n                    })\n                    .then(() => {\n                        if (this.state.profileChange === true) {\n                            let storageRef = firebase.storage().ref('profile-pic/' + this.uuidv4());\n                            storageRef.put(this.state.selectedFile).then((snapshot) => {\n\n                                db.collection(\"users\").doc(this.state.user.displayName).update({\n                                    profile_picture: snapshot.metadata.name\n                                }).then(() => {\n                                    window.location.reload(false)\n                                    \n                                })\n                                    .catch((error) => {\n                                        alert(error)\n                                    });\n\n                            })\n                                .catch(error => {\n                                    this.setState({ popupError: error.message })\n                                })\n                        } else {\n                            window.location.reload(false)\n                        }\n                    })\n                    .catch((error) => {\n                        this.setState({ popupError: error.message })\n                    })\n\n            })\n            .catch((error) => {\n                this.setState({ popupError: error.message })\n            })\n    }\n\n\n    redAlert() {\n        if (this.state.error !== '') {\n            return (\n                <div className=\"alert alert-dismissible alert-danger\">\n                    <strong>Oh snap!</strong> {this.state.error}\n                </div>\n            )\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n    popupAlert() {\n        if (this.state.popupError !== '') {\n            return (\n                <div className=\"alert alert-dismissible alert-danger\">\n                    <strong>Oh snap!</strong> {this.state.popupError}\n                </div>\n            )\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n    handleEmail = (event) => {\n        this.setState({ email: event.target.value })\n    }\n\n    handlePassword = (event) => {\n        this.setState({ password: event.target.value })\n    }\n\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value })\n    }\n\n    handleBio = (event) => {\n        this.setState({ bio: event.target.value })\n    }\n\n    handleProfilePicture = (event) => {\n        this.setState({ selectedFile: event.target.files[0] })\n        this.setState({ profileChange: true })\n\n    }\n\n\n    render() {\n        const CONFIRM_PASSWORD_POPUP = () => {\n\n            if (this.state.confirm === true) {\n                return (\n                    <div className=\"popup-holder\">\n                        <div className=\"jumbotron profile-password-confirm-popup\">\n                            <h3>Confirm your password!</h3>\n                            {this.popupAlert()}\n                            <hr />\n\n                            <label className=\"col-form-label\" htmlFor=\"email\">Password</label>\n                            <input type=\"password\" onChange={this.handlePassword} className=\"form-control\" placeholder='' value={this.state.password} id=\"email\" />\n\n                            <hr />\n                            <button className=\"btn btn-primary float-right\" onClick={this.handleConfirm}>Confirm</button>\n\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n        const PROFILE_BUTTON = () => {\n            if (this.state.disabled) {\n                return (\n                    <button type=\"button\" onClick={this.handleEdit} className=\"btn btn-secondary float-right\">Edit</button>\n                )\n            } else {\n                return (\n                    <button type=\"button\" onClick={this.handlePublish} className=\"btn btn-primary float-right\">Publish</button>\n                )\n            }\n        }\n\n\n\n\n        if (this.state.loading === true) {\n            return null\n        } else if (this.props.match.params.externalProfile) {\n            return <ExternalProfile data={this.props.match.params.externalProfile} />\n\n        } else if (this.state.loggedIn === true) {\n            return (\n                // Your code goes below this\n                <div>\n                    {CONFIRM_PASSWORD_POPUP()}\n                    <div className=\"container\">\n                        <div className=\"row profile-padding\">\n                            <div className=\"col-2 text-center profile-picture-holder\">\n                                <img src={this.state.profilePic} className=\"profile-profile-picture\" alt=\"Profile Pic\" />\n                                <p>{this.state.user.displayName}</p>\n\n\n                            </div>\n                            <div className=\"col\">\n                                <div className=\"jumbotron profile-holder\">\n                                    <h3>Profile Info</h3>\n                                    {this.redAlert()}\n                                    <hr />\n\n                                    <fieldset disabled={this.state.disabled}>\n                                        <label className=\"col-form-label\" htmlFor=\"email\">Email</label>\n                                        <input type=\"text\" onChange={this.handleEmail} className=\"form-control\" placeholder='' value={this.state.email} id=\"email\" />\n                                        <label className=\"col-form-label\" htmlFor=\"username\">Username</label>\n                                        <input type=\"text\" onChange={this.handleUsername} className=\"form-control\" placeholder='' value={this.state.username} id=\"username\" />\n                                        <label className=\"col-form-label\" htmlFor=\"bio\">Biography</label>\n                                        <textarea className=\"form-control\" onChange={this.handleBio} placeholder='' value={this.state.bio} id=\"bio\" rows=\"8\"></textarea>\n                                        <label className=\"col-form-label\" htmlFor=\"profile-pic\">Profile Pic</label> <br />\n                                        <input type=\"file\" name=\"file\" className=\"form-control-file\" accept=\"image/*\" aria-describedby=\"fileHelp\" id=\"profile-pic\" onChange={this.handleProfilePicture} />\n                                        <small id=\"fileHelp\" class=\"form-text text-muted\">Profile pictures are subject to deletion if found to contain nudity.</small>\n                                    </fieldset>\n                                    <hr />\n                                    {PROFILE_BUTTON()}\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                //and above this\n            )\n        } else if (this.state.loggedIn === false) {\n            return <Redirect to='/' />\n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport default Profile;","import React from 'react';\nimport firebase from 'firebase';\nimport { Redirect } from 'react-router-dom'\nimport db from '../config/firebase';\n\nclass MyForums extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: null,\n            loading: true,\n            user: {},\n            userData: {},\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ loggedIn: true });\n                this.setState({ user: firebase.auth().currentUser });\n\n                this.updateUserData();\n\n            } else {\n                this.setState({ loggedIn: false });\n                this.setState({ loading: false })\n            }\n        });\n    }\n\n    updateUserData = () => {\n        db.collection('users').doc(this.state.user.displayName).get().then(doc => {\n            if (doc.exists) {\n                this.setState({ userData: doc.data() });\n                this.setState({ loading: false })\n            } else {\n                alert('Error getting user data please reload.')\n            }\n        });\n    }\n\n\n    render() {\n        if (this.state.loading === true) {\n            return null\n        } else if (this.state.loggedIn === true) {\n            return (\n\n                // Your code goes below this\n                <div>\n                    <h1>You are on my forums</h1>\n                </div>\n                //and above this\n            )\n        } else if (this.state.loggedIn === false) {\n            return <Redirect to='/' />\n        } else {\n            return null;\n        }\n    }\n\n}\n\nexport default MyForums;","import React from 'react';\n\nconst NotFound = () => {\n    return ( \n        <div className=\"container\">\n            <div className=\"row not-found-container\">\n                <div className=\"col text-center\">\n                    <img src=\"images/404.png\" height=\"200px\" alt=\"Error not found\" /> <br />\n                    <h2>Houston... we have a problem</h2>\n                    <p className=\"text-primary\">404 page not found.</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Register from './register';\nimport Home from './home';\nimport Dashboard from './dashboard';\nimport Profile from './profile';\nimport MyForums from './myforums';\nimport firebase from 'firebase';\nimport NotFound from '../pages/404';\nimport db from '../config/firebase';\n\n\n\nclass Navbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedIn: null,\n            loading: true,\n            userData: {},\n            user: {},\n\n        }\n    }\n\n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ loggedIn: true });\n                this.setState({ user: firebase.auth().currentUser });\n\n                this.updateUserData();\n\n            } else {\n                this.setState({ loggedIn: false });\n                this.setState({ loading: false })\n            }\n        });\n    }\n\n    updateUserData = () => {\n        db.collection('users').doc(this.state.user.displayName).get().then(doc => {\n                this.setState({ userData: doc.data() });\n                this.setState({ bio: this.state.userData.bio })\n                this.setState({ email: this.state.userData.email })\n        })\n        .then(_ => {\n            let storageRef = firebase.storage().ref();\n            storageRef.child('profile-pic/'+ this.state.userData.profile_picture).getDownloadURL().then((url) => {\n                this.setState({ profilePic: url})\n              }).catch((error) => {\n                alert(error.message);\n              });\n        }).then(_ => {\n            this.setState({ loading: false })\n        })\n        .catch(error => {\n            alert(error.message);\n        })\n    }\n\n    handleLogout = () => {\n        firebase.auth().signOut().then(function () {\n            console.log('logged out')\n        }).catch(function (error) {\n            console.log(error)\n        });\n    }\n\n    render() {\n        if (this.state.loading === true) {\n            return null\n        } else if (this.state.loggedIn === true) {\n            return (\n                <Router>\n                    <div>\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n                            <a className=\"navbar-brand\" href=\"/\"><img src=\"https://firebasestorage.googleapis.com/v0/b/saturn-d573e.appspot.com/o/static-images%2Flogo.png?alt=media&token=720bb0dd-5c9b-4443-b2a1-d2c24ed0671d\" alt=\"Brand Logo\" height=\"40px\" /> <b>Saturn</b></a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n\n                            <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                                <ul className=\"navbar-nav mr-auto\">\n                                    <li className=\"nav-item\">\n                                        <Link to=\"/dashboard\" className=\"nav-link\">Dashboard</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link to=\"/myforums\" className=\"nav-link\">My forums</Link>\n                                    </li>\n                                </ul>\n\n                                <ul className=\"navbar-nav ml-auto nav-profile-holder\">\n                                    <li className=\"nav-item dropdown show\">\n                                        <a className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\">\n                                            <img src={this.state.profilePic} alt=\"Profile Image\" className=\"nav-profile-picture\"  /> {this.state.userData.custom_name}</a>\n                                        <div className=\"dropdown-menu \" x-placement=\"bottom-start\">\n                                            <Link to=\"/profile\" className=\"dropdown-item\">Profile</Link>\n                                            <a className=\"dropdown-item\" onClick={() => { this.handleLogout() }}>Logout</a>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>\n                        <div className=\"nav-spacer\">\n                        </div>\n                    </div>\n\n                    {/* A <Switch> looks through its children <Route>s and\n                    renders the first one that matches the current URL. */}\n                    <Switch>\n                        <Route path=\"/profile/:externalProfile\" component={Profile} />\n                        <Route path=\"/profile\" component={Profile} />\n                        <Route path=\"/myforums\" component={MyForums} />\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/register\" component={Register} />\n                        <Route path=\"/404\" component={NotFound} />\n                        <Route path=\"/\" component={Home} />\n                        <Route path=\"*\" component={NotFound} />\n                        \n                    </Switch>\n                </Router>\n            )\n\n        } else if (this.state.loggedIn === false) {\n            return (\n                <Router>\n                    <div>\n                        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n                            <a className=\"navbar-brand\" href=\"/\"><img src=\"images/logo.png\" alt=\"Brand Logo\" height=\"40px\" /> <b>Saturn</b></a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n\n                            <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                                <ul className=\"navbar-nav mr-auto\">\n                                    <li className=\"nav-item\">\n                                        <Link to=\"/\" className=\"nav-link\">Home</Link>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        </nav>\n                        <div className=\"nav-spacer\">\n                        </div>\n                    </div>\n\n                    {/* A <Switch> looks through its children <Route>s and\n                        renders the first one that matches the current URL. */}\n                    <Switch>\n                        <Route path=\"/profile\" component={Profile} />\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/register\" component={Register} />\n                        <Route path=\"/404\" component={NotFound} />\n                        <Route path=\"/\" component={Home} />\n                        <Route path=\"*\" component={NotFound} />\n                    </Switch>\n                </Router>\n            )\n        } else {\n            return null;\n        }\n    }\n\n}\nexport default Navbar","import React from 'react';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"blank-div\">\n\n                </div>\n                <div className=\"text-center footer\">\n                    <div className=\"row\">\n                        <div className=\"col-5\">\n                            <p>Copyright &copy; 2019 Saturn</p> \n                            <p className=\"text-primary\">Created by team no-babies</p>\n                        </div>\n\n                        <div className=\"col-5 text-right footer-icons\">\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/saturn-d573e.appspot.com/o/static-images%2Freact.png?alt=media&token=eabf66ac-18c3-49cb-9e5f-4936db26bbf1\" className=\"footer-icon\" alt=\"React\" />\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/saturn-d573e.appspot.com/o/static-images%2Fbootstrap.png?alt=media&token=7156b4ab-b404-4933-8fbd-54f9c0dc4695\" className=\"footer-icon\" alt=\"Bootstrap\" />\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/saturn-d573e.appspot.com/o/static-images%2Ffirebase.png?alt=media&token=101a52af-96d5-4527-8cd0-745f8f5e87c3\" className=\"footer-icon\" alt=\"Firebase\" />\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Navbar from './pages/navbar';\nimport Footer from './pages/footer';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \n    }\n  }\n\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  render() {\n    return (\n        <div>\n          <Navbar />\n          <Footer />\n         \n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}