{"version":3,"sources":["pages/register.js","pages/home.js","pages/navbar.js","pages/footer.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","handleRegister","console","log","dUsername","current","value","length","setState","error","test","React","createRef","dEmail","dPassword","dCPassword","state","this","className","href","redAlert","htmlFor","type","ref","placeholder","id","onClick","Component","Home","class","for","Navbar","src","alt","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","path","component","Footer","style","clear","float","size","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d13d69f2.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dUsername = React.createRef();\n        this.dEmail = React.createRef();\n        this.dPassword = React.createRef();\n        this.dCPassword = React.createRef();\n\n        this.state = {\n            error: '',\n        }\n    }\n\n\n\n    handleRegister = () => {\n\n        console.log('Clicked Register Button')\n        if (this.dUsername.current.value.length > 20) {\n            this.setState({ error: 'Your username can not exceed 20 characters.' })\n        } else if (this.dUsername.current.value.length < 3) {\n            this.setState({ error: 'Your username can not be less then 3 characters.' });\n        } else if (!(/^[a-zA-Z0-9]+$/.test(this.dUsername.value))) {\n            this.setState({ error: 'Username can only contain letters and numbers.' });\n        } else {\n            this.setState({ error: '' })\n            // let data = {};\n            // axios.post('http://localhost:5000/create_user', data)\n            //     .then(res => {\n            //         return res;\n            //     });\n        }\n\n    }\n\n    redAlert() {\n        if (this.state.error !== '') {\n            return (\n                <div className=\"alert alert-dismissible alert-danger\">\n                    <strong>Oh snap!</strong> {this.state.error}\n                </div>\n            )\n        } else {\n            return (\n                <p></p>\n            )\n        }\n    }\n\n\n    render() {\n\n\n        return (\n            <div>\n                <ol className=\"breadcrumb\">\n                    <li className=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n                    <li className=\"breadcrumb-item active\">Register</li>\n\n                </ol>\n\n                <div className=\"col-sm\">\n                    <br />  <br />\n                    <div className=\"container\">\n                        <div className=\"jumbotron\">\n                            <h1>Make a new account. </h1>\n\n                            {this.redAlert()}\n\n                            <label className=\"col-form-label\" htmlFor=\"username\">Username</label>\n                            <input type=\"text\" ref={this.dUsername} className=\"form-control\" placeholder=\"Username\" id=\"username\" />\n                            <label className=\"col-form-label\" htmlFor=\"email\">Email</label>\n                            <input type=\"text\" ref={this.dEmail} className=\"form-control\" placeholder=\"JohnDoe@gmail.com\" id=\"email\" />\n                            <label className=\"col-form-label\" htmlFor=\"pass\">Password</label>\n                            <input type=\"text\" ref={this.dPassword} className=\"form-control\" placeholder=\"Password\" id=\"pass\" />\n                            <label className=\"col-form-label\" htmlFor=\"cpass\">Confirm Password</label>\n                            <input type=\"text\" ref={this.dCPassword} className=\"form-control\" placeholder=\"Confirm Password\" id=\"cpass\" /> <br />\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => { this.handleRegister() }}>Register</button> <br />\n\n\n\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Register;","import React from 'react';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <ol class=\"breadcrumb\">\n                    <li class=\"breadcrumb-item active\">Home</li>\n                </ol>\n\n                <div className=\"row login\">\n                    <div className=\"col-md-7 login-splash\">\n\n                    </div>\n                    <div className=\"col-md-4 login-holder\">\n                        <div class=\"card card-center text-white bg-primary mb-3 fullLength\" >\n                            <div class=\"card-header text-center\">Login</div>\n                            <div class=\"card-body\">\n                                <div class=\"form-group\">\n                                    <label class=\"col-form-label\" for=\"inputDefault\">Username</label>\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" id=\"inputDefault\" />\n                                    <label class=\"col-form-label\" for=\"inputDefault\">Password</label>\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" id=\"inputDefault\" /> <br />\n                                    <button type=\"button\" class=\"btn btn-secondary btn-white\">Login</button> &nbsp;\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"text-center\">\n                            <small>Don't have an account? <a href=\"/register\"><b>Register</b></a></small>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Register from './register';\nimport Home from './home';\n\n\nclass Navbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n\n            <Router>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"/\"><img src=\"images/logo.png\" alt=\"Brand Logo\" height=\"40px\" /> <b>Saturn</b></a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <Link to=\"/\" className=\"nav-link\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to=\"/register\" className=\"nav-link\">Register</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\n                {/* A <Switch> looks through its children <Route>s and\n                    renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/register\" component={Register} />\n                    <Route path=\"/\" component={Home} />\n                </Switch>\n            </Router>\n\n\n        )\n    }\n\n}\nexport default Navbar","import React from 'react';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n        const footerStyle = {\n            clear: 'both',\n            float: 'none',\n            size: '0.3vh'\n        }\n\n        return (\n            <div>\n                <div className=\"blank-div\">\n\n                </div>\n                <div className=\"text-center footer fixed-bottom my-auto\" style={footerStyle}>\n                    <div className=\"row\">\n                        <div className=\"col my-auto\">\n                        <p><small>This is a demonstration of using a backend (express.js) to work with a front end(React.js)</small></p>\n                        </div>\n                        <div className=\"col my-auto\">\n                        <p><small>Copyright &copy; 2019 Caleb Hinton</small></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Navbar from './pages/navbar';\nimport Footer from './pages/footer';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      \n    }\n  }\n\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  render() {\n    return (\n        <div>\n          <Navbar />\n          <Footer />\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}